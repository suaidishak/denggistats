difftime(Sys.time(), t1, units = 'days')
cars <- data(cars)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$dist, y = cars$speed)
skip()
plot(x = cars$dist, y = cars$speed)
plot(x = cars$dist, y = cars$speed, xlab = "Speed")
skip()
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
skip()
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopp
)
...
))))
ylab)
"title)))"
skip()
skip()
?par
plot(cars, col =2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
data("mtcars")
data(mtcars)
?boxplot
boxplot(mtcars, mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
swirl()
menu()
swirl()
install_course("Getting_and_Cleaning_Data")
swirl()
play()
rm(list = ls())
nxt()
main()
View(cran)
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran,country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran,r_version == "3.1.1", country == "US"))
filter(cran,r_version == "3.1.1", country == "US")
?Comparison
filter(cran,r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 AND r_os == "linux-gnu")
filter(cran, size > 100500 , r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na())
filter(cran, !is.na(r_version))
cran2 <- select(cran,size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version),ip_id)
cran3 <- select(cran, ip_id, package,size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/2^10, correct_size = size - 1000)
skip()
summarize(cran, avg_bytes = mean(size))
skip()
cran <- tbl_df(cran)
cran <- tbl_df(mydf)
skip()
cran
?group_by
by_package <- group_by(cran,package)
by_package
summarise(by_package)
summarise(by_package,mean(size))
submit()
skip()
tbl()
tbl
skip()
quantile(pack_sum$count, probs = 0.99)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
install_course("Exploratory_Data_Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,color = blue)
?boxplot
boxplot(ppm,col = blue)
boxplot(ppm,col = 'blue')
abline(h=12)
hist(ppm,col='green')
rug(ppm)
head(low)
low
high
hist(ppm,col='green',breaks = 100)
rug(ppm)
hist(ppm,col='green)
)
;;;
/
high
hugh)
col = green)
''
'''
hist(ppm,col='green')
abline(h=12)
abline(v = 12, lwd=2)
abline(v = median(ppm), lwd=2,col = "magenta")
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg = table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col col = "wheat", main = "Number of Counties in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, data = pollution,col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25,col = "green")
hist((subset(pollution, region == "west")$pm25,col = "green")
skip()
skip()
abline
abline(h=12)
skip()
plot(pollution$latitude,ppm,col=pollution$region)
skip()
library(devtools)
require(slidify)
install.packages("slidify")
getwd(()
getwd()
dir()
library(devtools)
library(rvest)
install.packages("rvest")
library(rvest)
vignette("selectorgadget")
library(xlsx)
library(xlsx)
sudo
library(xlsx)
library(xlsx)
install.packages("rJava")
install.packages("rJava")
Sys.setenv(JAVA_HOME="C:\\Program Files\\Java\\jre7")
Sys.setenv(JAVA_HOME="C:\\Program Files (x86)\\Java\\jre7")
library(rJava)
library(xlsx)
install.packages("xlsx")
library(xlsx)
library(xlsx)
library(xlsx)
library(rJava)
library(xlsx)
library(xlsx)
library(xlsx)
Sys.setenv(JAVA_HOME = '/Library/Java//Home')
Sys.setenv(LD_LIBRARY_PATH = '$LD_LIBRARY_PATH:$JAVA_HOME/lib')
library(xlsx)
library(rJava
)
library(xlsx)
x <- c(-0.5, 0, 1, 1, 1.5)
y <- c(0, 0, 2, 0, 0)
plot(x, y, lwd = 3,frame = FALSE, type = "l")
class(x)
class(y)
str(x)
x <- c(-0.5, 0, 1, 1, 1.5)
y <- c(0, 0, 2, 0, 0)
plot(x, y, lwd = 3,frame = T, type = "l")
x <- c(-0.5, 0, 1, 1, 1.5)
y <- c(0, 0, 2, 0, 0)
plot(x, y, lwd = 3)
x <- c(-0.5, 0, 1, 1, 1.5)
y <- c(0, 0, 2, 0, 0)
plot(x, y, lwd = 3,frame = T, type = "l")
?pbeta
data("mtcars")
plot(mtcars$disp, mtcars$wt)
View(mtcars)
View(mtcars)
plot(mtcars$disp, mtcars$wt, col = "red", xlab = "displacement", ylab = "weight")
set.seed(1234)
x <- rnorm(12,mean = rep(1:3,each=4),sd=0.2)
y <- rnorm(12,mean = rep(c(1,2,1),each=4),sd=0.2)
plot(x,y, col = "red", pch=19, cex =2)
View(x)
View(y)
x
y
df <- as.data.frame(x,y)
df <- data.frame(x,y)
View(df)
distxy <- dist(df)
distxy
clusters <- hcust(distxy)
clusters <- hclust(distxy)
plot(hclust())
plot(hclust)
plot(hclusters)
plot(clusters)
rect.hclust(clusters, k= 2,border = "red")
rect.hclust(clusters, k= 3,border = "blue")
rect.hclust(clusters, k= 4,border = "blue")
rect.hclust(clusters, k= 4,border = "green")
plot(clusters)
rect.hclust(clusters, k= 4,border = "green")
k.clusters <- kmeans(df, centers = 3)
class(k.clusters)
names(k.clusters)
plot(k.clusters$cluster, pch = 19, cex = 2)
k.clusters <- kmeans(df, centers = 3)
plot(k.clusters$cluster, pch = 19, cex = 2)
points(k.clusters$cluster, pch = 19, cex = 2)
x <- rnorm(12,mean = rep(1:3,each=4),sd=0.2)
y <- rnorm(12,mean = rep(c(1,2,1),each=4),sd=0.2)
df <- data.frame(x,y)
plot(x,y)
plot(x,y, col = 1:3, pch = 19, cex = 2)
sed.seed(1234)
set.seed(1234)
x <- rnorm(12,mean = rep(1:3,each=4),sd=0.2)
y <- rnorm(12,mean = rep(c(1,2,1),each=4),sd=0.2)
df <- data.frame(x,y)
y <- rnorm(12,mean = rep(c(1,2,1),each=4),sd=0.2)
plot(x,y, col = 1:3, pch = 19, cex = 2)
kmeansObj <- kmeans(df, centers = 3)
points(kmeansObj$centers, col = 1:3, pch= 19, cex = 2)
points(kmeansObj$centers, col = 1:3, pch= 3, cex = 2)
x <- rnorm
x <- rnorm(1000)
y <- rnorm(1000
)
smoothScatter(x,y)
plot(x,y)
x <- rnorm(10000)
y <- rnorm(10000)
plot(x,y)
smoothScatter(x,y)
opar <- par()
par(col.lab = "red")
hist(mtcars$mpg)
par(opar)
hist(mtcars$mpg)
setwd("~/Documents/denggistats")
dir()
df.2012 <- read.csv('data/LokalitiHotspot2012.csv')
df.2013 <- read.csv('data/LokalitiHotspot2013.csv')
df.2014 <- read.csv('data/LokalitiHotspot2014.csv')
df.2015 <- read.csv('data/LokalitiHotspot2015.csv')
library(ggplot2)
library(data.table)
df <- rbind(df.2012, df.2013, df.2014, df.2015)
View(df)
View(df)
names(df)<-c('Year','Week','State','District','Location','Total_Cases','Outbreak_Duration')
is.na(df$Total_Cases)
df[is.na((df$Total_Cases))]
sum(df$Total_Cases)
str(df)
df$Total_Cases <- as.numeric(df$Total_Cases)
?which
which(is.na(df$Total_Cases))
df[2741]
df[,2741]
df[2741,]
df <- rbind(df.2012, df.2013, df.2014, df.2015)
names(df)<-c('Year','Week','State','District','Location','Total_Cases','Outbreak_Duration')
df[2741,]
df$Total_Cases <- as.numeric(df$Total_Cases)
df1 <- df
omit.na(df1)
na.omit(df1)
df1 <- na.omit(df1)
which(is.na(df1$Total_Cases))
rm(df1)
sum(df$Total_Cases)
df <- na.omit(df)
sum(df$Total_Cases)
df$Year <- as.factor(df$Year)
str(df)
df$Outbreak_Duration <- as.numeric(df$Outbreak_Duration)
str(df)
dt <- data.table(df)
dt.by.year <- dt[, sum(df$Total_Cases), by = Year]
View(dt.by.year)
View(dt.by.year)
plot(dt.by.year)
hist(dt.by.year)
barplot(dt.by.year)
master_data <- read.csv("latest master data 11Oct2016.csv")
View(master_data)
View(master_data)
subset(master_data, State == "SEL")
txdata <- read.csv("PRD_Stock Level and Sales.csv")
View(txdata)
View(txdata)
dir()
txdata <- read.csv("stock level.csv")
txdata <- read.xlsx
install.packages("xlsx")
library(xlsx)
View(txdata)
View(txdata)
names(txdata)
cnames <- names(txdata)
cnames
cnames <- c("Day 1",)
cnames <- c("Day_1","Day_2","Day_3","Day_4","Day_5","Day_6","Day_7","Station_Name","Station ID","Station_Region","Diesel_Quota","Tank_ID","Product_Name","Day_1_Sales","Day_1_Stock","Day_2_Sales","Day_2_Stock","Day_3_Sales","Day_3_Stock","Day_4_Sales","Day_4_Stock","Day_5_Sales","Day_5_Stock","Day_6_Sales","Day_6_Stock","Day_7_Sales","Day_7_Stock")
names(txdata) <- cnames
sum(unique(txdata))
class(txdata)
class(txdata$Station_Name)
sum(unique(txdata$Station_Name))
unique(txdata$Station_Name)
txdata$Start_Date_data <- txdata$Day_1
txdata$End_Date_data <- txdata$Day_7
txdata <- txdata[-c("Day_1","Day_2","Day_3","Day_4","Day_5","Day_6","Day_7")]
txdata <- txdata[,-(1:7),drop=FALSE]
txdata <- txdata[-c("Day_1","Day_2","Day_3","Day_4","Day_5","Day_6","Day_7")]
txdata <- data.table(txdata)
class(txdata)
tables
tables()
stars_7_days_dt <- read.csv("stock level.csv")
stars_7_days_dt <- read.csv("stock level.csv")
cnames <- c("Day_1","Day_2","Day_3","Day_4","Day_5","Day_6","Day_7","Station_Name","Station ID","Station_Region","Diesel_Quota","Tank_ID","Product_Name","Day_1_Sales","Day_1_Stock","Day_2_Sales","Day_2_Stock","Day_3_Sales","Day_3_Stock","Day_4_Sales","Day_4_Stock","Day_5_Sales","Day_5_Stock","Day_6_Sales","Day_6_Stock","Day_7_Sales","Day_7_Stock")
names(stars_7_days_dt) <- cnames
stars_7_days_dt$Start_Date_data <- stars_7_days_dt$Day_1
stars_7_days_dt$End_Date_data <- stars_7_days_dt$Day_7
# txdata <- txdata[-c("Day_1","Day_2","Day_3","Day_4","Day_5","Day_6","Day_7")]
stars_7_days_dt <- stars_7_days_dt[,-(1:7),drop=FALSE]
View(stars_7_days_dt)
View(stars_7_days_dt)
stars_7_days_dt <- data.table(stars_7_days_dt)
stars_master_data <- read.csv("latest master data 11Oct2016.csv")
head(stars_master_data$Latitude.Longitude..Road,stars_master_data$Latitude.Longitude..Home)
head(stars_master_data[,"Latitude.Longitude..Road"])
head(stars_master_data[,"Latitude.Longitude..Home"])
class(stars_master_data)
names(stars_master_data)
cnames <- names(stars_master_data)
cnames
capture.output(names(stars_master_data), file = cnames)
capture.output(names(stars_master_data), file = cnames, append = T)
capture.output(names(stars_master_data), file = "cnames", append = T)
capture.output(names(stars_master_data), file = "cnames", sep = "n", append = T)
?capture.output
unique(stars)
unique(stars_master_data$Status)
cnames <- c(“Name”,”ForeignID”,”Street”,”Bandar”,","Postcode”,”State”,"District","Region..North..South..East.or.Central.",”Accessibilty.Roadtanker”,”Latitude.Longitude..Road”,"User.Max.Stock”,”Opening.time”,"Default.terminal”,"Customer.type”,"Closing.time”)
c(“Name”,”ForeignID”,”Street”,”Bandar”,"Postcode”,”State”,"District”,”Region..North..South..East.or.Central.”,”Accessibilty.Roadtanker”,”Latitude.Longitude..Road”,"User.Max.Stock”,”Opening.time”,"Default.terminal”,"Customer.type”,"Closing.time”)
cnames <- c(“Name”,”ForeignID”,”Street”,”Bandar”,"Postcode”,”State”,"District”,”Region..North..South..East.or.Central.”,”Accessibilty.Roadtanker”,”Latitude.Longitude..Road”,"User.Max.Stock”,”Opening.time”,"Default.terminal”,"Customer.type”,"Closing.time”)
stars_master_data1 <- stars_master_data[, stars_master_data$Name]
stars_master_data1 <- stars_master_data[stars_master_data$Name,]
?read.csv
capture.output(names(stars_master_data), file = "cnames", append = T)
cnames <- c("Street","Bandar","Postcode","State")
View(stars_master_data)
View(stars_master_data)
cnames <- paste(cnames,c("Accessibilty.Roadtanker","Binary.opening.weekdays.string","Latitude.Longitude..Road"),sep = ",")
cnames
cnames <- c("Street","Bandar","Postcode","State","District","Region..North..South..East.or.Central.")
cnames <- paste(cnames,c("Accessibilty.Roadtanker","Binary.opening.weekdays.string","Latitude.Longitude..Road"),sep = ",")
?paste
cnames <- c("Street","Bandar","Postcode","State","District","Region..North..South..East.or.Central.")
cnames <- paste(cnames,"Accessibilty.Roadtanker","Binary.opening.weekdays.string","Latitude.Longitude..Road",sep = ",")
cnames
cnames <- c("Street","Bandar","Postcode","State","District","Region..North..South..East.or.Central.")
cnames <- c(cnames,"Accessibilty.Roadtanker","Binary.opening.weekdays.string","Latitude.Longitude..Road")
cnames
cnames <- c("Street","Bandar","Postcode","State","District","Region..North..South..East.or.Central.")
cnames <- c(cnames,"Accessibilty.Roadtanker","Binary.opening.weekdays.string","Latitude.Longitude..Road")
cnames <- c(cnames,"User.Min.Stock","User.Max.Stock","Opening.time","Default.terminal","Customer.type","Closing.time")
cnames
stars_master_data1 <- stars_master_data(cnames)
stars_master_data1 <- stars_master_data[cnames]
stars_master_data <- stars_master_data[cnames]
rm(stars_master_data1)
stars_master_data <- data.table(stars_master_data)
tables()
cnames <- c("Jalan","City","Postcode","State","District","Region")
cnames <- c(cnames,"Accessibilty_Roadtanker","Binary_Opening_Weekdays","Latitude_Longitude")
cnames <- c(cnames,"User_Min_Stock","User_Max_Stock","Opening_Time","Default_Terminal","Customer_Type","Closing_Time")
names(stars_master_data) <- cnames
head(stars_master_data$Latitude_Longitude)
head(nchar(stars_master_data$Latitude_Longitude))
str(stars_master_data$Latitude_Longitude)
stars_master_data$Latitude_Longitude <- as.character(stars_master_data$Latitude_Longitude)
str(stars_master_data$Latitude_Longitude)
head(nchar(stars_master_data$Latitude_Longitude))
substr(stars_master_data$Latitude_Longitude,first,last)
substr(stars_master_data$Latitude_Longitude,2,nchar(stars_master_data$Latitude_Longitude)-1)
lonlat <- substr(stars_master_data$Latitude_Longitude,2,nchar(stars_master_data$Latitude_Longitude)-1)
substr(stars_master_data$Latitude_Longitude,2,nchar(stars_master_data$Latitude_Longitude)-1)
pos_comma <- regexpr(',',lonlat)
lon <- substr(lonlat,1,pos_comma-1)
lat <- substr(lonlat,nchar(lonlat)-1)
lat <- substr(lonlat,pos_comma +1,nchar(lonlat)-1)
stars_master_data$lat <- lat
stars_master_data$lon <- lon
airports <- read.csv("http://openflights.svn.sourceforge.net/viewvc/openflights/openflights/data/airports.dat", header = FALSE)
airports <- read.csv("airports.dat.csv")
str(airports)
names(airports)
View(airports)
View(airports)
airports <- read.csv("airports.dat.csv",header = F)
str(airports)
colnames(airports) <- c("ID", "name", "city", "country", "IATA_FAA", "ICAO", "lat", "lon", "altitude", "timezone", "DST")
head(airports)
str(airports)
install.packages(worldmap)
install.packages("worldmap")
install.packages("rworldmap")
> library(rworldmap)
library(rworldmap)
newmap <- getMap(resolution = "low")
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1)
points(airports$lon, airports$lat, col = "red", cex = .6)
points(stars_master_data$lon, stars_master_data$lat, col = "red", cex = .6)
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1)
points(stars_master_data$lon, stars_master_data$lat, col = "red", cex = .6)
str(airports)
points(stars_master_data$lon, stars_master_data$lat, col = "red", cex = .6)
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1)
points(stars_master_data$lon, stars_master_data$lat, col = "red", cex = .6)
routes <- read.csv("airports.dat.csv")
colnames(routes) <- c("airline", "airlineID", "sourceAirport", "sourceAirportID", "destinationAirport", "destinationAirportID", "codeshare", "stops", "equipment")
View(routes)
View(routes)
routes <- read.csv("airports.dat.csv")
View(routes)
View(routes)
library(data.table)
stars7_master_raw <- read.csv("latest master data 11Oct2016.csv",stringsAsFactors = F)
stars7_master <- stars7_master_raw[,c(2,1,3,4,5,6,7,8,9,13,14,15,16,18,19,20)]
cnames <- c("Station_ID","Address_1","Address_2","City","Postcode","State","District","Region","Country")
cnames <- c(cnames,"Accessibilty","Binary_String","Actual_Max_Size","Latitude_Longitude")
cnames <- c(cnames,"User_Min_Stock","User_Max_Stock","Status")
names(stars7_master) <- cnames
#stars7_master <- stars7_master[cnames]
# stars7_master <- data.table(stars7_master)
# cnames <- c("Jalan","City","Postcode","State","District","Region")
# cnames <- c(cnames,"Accessibilty_Roadtanker","Binary_Opening_Weekdays","Latitude_Longitude")
# cnames <- c(cnames,"User_Min_Stock","User_Max_Stock","Opening_Time","Default_Terminal","Customer_Type","Closing_Time")
# names(stars_master_data) <- cnames
stars7_master$Latitude_Longitude <- as.character(stars7_master$Latitude_Longitude)
lonlat <- substr(stars7_master$Latitude_Longitude,2,nchar(stars7_master$Latitude_Longitude)-1)
pos_comma <- regexpr(',',lonlat)
# lat <- as.numeric(substr(lonlat,1,pos_comma-1))
lat <- substr(lonlat,1,pos_comma-1)
#lon <- as.numeric(substr(lonlat,pos_comma +1,nchar(lonlat)-1))
lon <- substr(lonlat,pos_comma +1,nchar(lonlat)-1)
stars7_master$latitude <- lat
stars7_master$longitude <- lon
View(stars7_master)
View(stars7_master)
library(maps)
library(ggplot2)
mp <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'stamen-watercolor')
install.packages("OpenStreetMap")
View(stars7_master_raw)
library(OpenStreetMap)
library(OpenStreetMap)
library(OpenStreetMap)
